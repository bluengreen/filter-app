#!/usr/bin/env ruby
require 'fileutils'
require 'pry'
call =  caller

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

if call.length == 0
  FileUtils.chdir APP_ROOT do
    # This script is a way to setup or update your development environment automatically.
    # This script is idempotent, so that you can run it at anytime and get an expectable outcome.
    # Add necessary setup steps to this file.

    puts '== Installing dependencies =='
    system! 'gem install bundler --conservative'
    system('bundle check') || system!('bundle install')

    unless File.exist?('config/database.yml')
      puts "\n== Copying sample files =="
      FileUtils.cp 'config/database.yml.sample', 'config/database.yml'
    end
    unless File.exist?('config/secrets.yml')
      puts "\n== Copying default secrets.yml =="
      FileUtils.cp 'config/secrets.yml.example', 'config/secrets.yml'
    end
    unless File.exist?('config/application.yml')
      puts "\n== Copying default application.hrfilter.yml =="
      FileUtils.cp 'config/application.hrfilter.yml', 'config/application.yml'
    end
    system! "rails app:template LOCATION=./#{__FILE__}"

    puts "\n== Removing old logs and tempfiles =="
    system! 'bin/rails log:clear tmp:clear'

    puts "\n== Restarting application server =="
    system! 'bin/rails restart'
  end
else
  if yes?("(Re)creating database? (y|N)")
    puts "\n== Preparing database =="
    system! "rails db:create db:schema:load"
  end
  if yes?("Loading seeds and default settings? (y|N)")
    run 'rails runner "Setting.read_yaml"'
  end
  if yes?("Loading seeds? (y|N)")
    run "rails db:seed"
    run 'rails runner "Source.cronjob"'
    run 'rails runner "NewsItem.cronjob"'
    puts "FINISHED: Now run sidekiq to process the queue and get data"
    puts " bundle exec sidekiq -q low -q default -q mailers -q important  --verbose"
  end
end
